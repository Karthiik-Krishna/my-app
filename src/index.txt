const express = require("express");
const bodyParser = require("body-parser");
const {MongoClient} = require("mongodb");
const mongo = require("mongodb");
const app = express();
const port = 3000;
let realDB;
let fDB;
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({
  extended: true
}));
app.get("/getall",async(req,res)=>{
    try{
        const result = await realDB.find().toArray();
        return res.json(result);
    }catch(err){
        console.log(err);
        return res.status(404);
    }
})
app.post("/post",async(req,res)=>{
    let body = req.body;
    body.time = new Date(body.time)
    try{
        const result = await realDB.insertOne(body);
        return res.json(result.ops);
    }catch(err){
        console.log(err);
        return res.status(404);
    }
})
app.put("/put",async(req,res)=>{
    let body = req.body;
    let update = {
        $set:{
            time:new Date(body.time),
            email:body.email,
            content:body.content
        }
    }
    let query = {"_id":mongo.ObjectID(body.Id)}
    try{
        const result = await realDB.updateOne(query,update);
        return res.json({"Modified":result.result.nModified});
    }catch(err){
        console.log(err);
        return res.status(404);
    }
})
app.delete("/delete",async(req,res)=>{
    let id = req.body.Id;
    let query = {"_id":mongo.ObjectID(id)}
    try{
        const result = await realDB.deleteOne(query);
        return res.json(result.ops);
    }catch(err){
        console.log(err);
        return res.status(404);
    }
})
app.get("/getfailed",async(req,res)=>{
    try{
        const result = await fDB.find().toArray();
        return res.json(result);
    }catch(err){
        console.log(err);
        return res.status(404);
    }
})


async function sendMails(){
    let result;
    try{
        result = await realDB.find().toArray();
        for(i in result){
            let email = result[i].email
            let eTime = new Date(result[i].time)
            let content = result[i].content
            let now = new Date();
            if(eTime.getDate() == now.getDate() && eTime.getHours() == now.getHours() && eTime.getMinutes() == now.getMinutes()){
            //     const sgMail = require('@sendgrid/mail')
            //     sgMail.setApiKey(process.env.SENDGRID_API_KEY)

            //     const msg = {
            //         to: 'test@example.com', // Change to your recipient
            //         from: 'test@example.com', // Change to your verified sender
            //         subject: 'Sending with SendGrid is Fun',
            //         text: 'and easy to do anywhere, even with Node.js',
            //         html: '<strong>and easy to do anywhere, even with Node.js</strong>',
            //     }

            //     sgMail
            //         .send(msg)
            //         .then(() => {
            //         console.log('Email sent')
            //     })
            //     .catch((error) => {


// if mail is not sent just add the details to fDB 
//     body = {time,content,email} 
//     try{
//         const result = await fDB.insertOne(body);
//      
//     }catch(err){
//         console.log(err);
//       
//     }

            //     console.error(error)
            //     })
            }
        }
    }catch(err){
        console.log(err);
    }
    setTimeout(sendMails,60000)
}

const mongo_uri =  "mongodb://127.0.0.1:27017";


MongoClient.connect(mongo_uri, { useNewUrlParser: true,useUnifiedTopology: true,poolSize:10 })
.then(async(client) => {
  const db = client.db('db');
  realDB = db.collection('real');
  fDB = db.collection("failed");
  app.listen(port,
    console.log(
      `Server running on port ${port}`
    )
  );
  sendMails();
}).catch(error => console.error(error));

// let nw = new Date();
// setTimeout((date)=>{
//     let nkeed = new Date();
//     console.log(date.getMinutes()==nkeed.getMinutes())
// },61000,nw)